<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="actionIntroLabel.Text" xml:space="preserve">
    <value>Cuando creas una tarea, debe especificar la acción que ocurrirá cuando comienza su tarea.</value>
  </data>
  <data name="actionsTab.HelpKeyword" xml:space="preserve">
    <value>/HTML/a7df21e3-cdd6-450D-94e8-58579cb7be04.htm</value>
  </data>
  <data name="actionsTab.Text" xml:space="preserve">
    <value>Acciones</value>
  </data>
  <data name="addPropTab.Text" xml:space="preserve">
    <value>Adiciones</value>
  </data>
  <data name="autoMaintGroup.Text" xml:space="preserve">
    <value>Mantenimiento automático</value>
  </data>
  <data name="changePrincipalButton.Text" xml:space="preserve">
    <value>Cambio y usuario o grupo...</value>
  </data>
  <data name="conditionIntroLabel.Text" xml:space="preserve">
    <value>Especificar las condiciones que. junto con el gatillo y determine si debe ejecutar la tarea. La tarea no se ejecutará si cualquier condición especificada no es cierto.</value>
  </data>
  <data name="conditionsTab.HelpKeyword" xml:space="preserve">
    <value>/HTML/687d6377-ee3a-404c-B211-a7b36e3dd619.htm</value>
  </data>
  <data name="conditionsTab.Text" xml:space="preserve">
    <value>Condiciones</value>
  </data>
  <data name="generalTab.HelpKeyword" xml:space="preserve">
    <value>/HTML/a922c2b5-6a43-4503-ab7f-4f3d77b3cc8a.htm</value>
  </data>
  <data name="generalTab.Text" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="historyTab.HelpKeyword" xml:space="preserve">
    <value>/HTML/8eda9018-6ee6-4a72-b2a4-bdcee28e2828.htm</value>
  </data>
  <data name="historyTab.Text" xml:space="preserve">
    <value>Historia</value>
  </data>
  <data name="idleConditionGroupBox.Text" xml:space="preserve">
    <value>De ralentí</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>No se puede mostrar los tiempos de ejecución para esta tarea.</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Ubicación:</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Error:</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Especificar adicional de seguridad, mantenimiento y sistema de configuración de compatibilidad de función de la tarea.</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Especificar la información de registro para la tarea.</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>Nivel y de prioridad:</value>
  </data>
  <data name="networkConditionGroupBox.Text" xml:space="preserve">
    <value>Red</value>
  </data>
  <data name="powerConditionGroupBox.Text" xml:space="preserve">
    <value>Potencia</value>
  </data>
  <data name="principalReqPrivilegesLabel.Text" xml:space="preserve">
    <value>&amp;Requied privilegios:</value>
  </data>
  <data name="principalSIDTypeLabel.Text" xml:space="preserve">
    <value>Proceso y tipo de identificación de seguridad (SID):</value>
  </data>
  <data name="regInfoTab.Text" xml:space="preserve">
    <value>Información</value>
  </data>
  <data name="runTimesErrorLabel.Text" xml:space="preserve">
    <value>(texto de error)</value>
  </data>
  <data name="runTimesTab.Text" xml:space="preserve">
    <value>Tiempos de ejecución</value>
  </data>
  <data name="secHardGroup.Text" xml:space="preserve">
    <value>Endurecimiento de la seguridad</value>
  </data>
  <data name="settingsIntroLabel.Text" xml:space="preserve">
    <value>Especifique las opciones adicionales que afectan el comportamiento de la tarea.</value>
  </data>
  <data name="settingsTab.HelpKeyword" xml:space="preserve">
    <value>/HTML/d758ff5d-27d3-4090-b1c2-14ecaa83ff12.htm</value>
  </data>
  <data name="settingsTab.Text" xml:space="preserve">
    <value>Configuración</value>
  </data>
  <data name="taskAllowDemandStartCheck.Text" xml:space="preserve">
    <value>&amp;Permitir que la tarea se ejecute a petición</value>
  </data>
  <data name="taskAllowHardTerminateCheck.Text" xml:space="preserve">
    <value>Si la tarea corriente no termina cuando pidió y obligarla a dejar de</value>
  </data>
  <data name="taskAuthorLabel.Text" xml:space="preserve">
    <value>Autor:</value>
  </data>
  <data name="taskDeleteAfterCheck.Text" xml:space="preserve">
    <value>Si la tarea no está programada para funcionar otra vez y borrarlo después de:</value>
  </data>
  <data name="taskDescLabel.Text" xml:space="preserve">
    <value>&amp;Descripción:</value>
  </data>
  <data name="taskDisallowStartIfOnBatteriesCheck.Text" xml:space="preserve">
    <value>Iniciar la tarea sólo si el equipo es el AC y la potencia</value>
  </data>
  <data name="taskDisallowStartOnRemoteAppSessionCheck.Text" xml:space="preserve">
    <value>&amp;No permitir Inicio si en una sesión remota aplicaciones integrada localmente (carril)</value>
  </data>
  <data name="taskEnabledCheck.Text" xml:space="preserve">
    <value>&amp;Habilitado</value>
  </data>
  <data name="taskExecutionTimeLimitCheck.Text" xml:space="preserve">
    <value>Detener el tas y k si se ejecuta más de:</value>
  </data>
  <data name="taskHiddenCheck.Text" xml:space="preserve">
    <value>Hidd y en</value>
  </data>
  <data name="taskIdleDurationCheck.Text" xml:space="preserve">
    <value>Iniciar el solamente si de la tarea del y equipo está inactivo durante:</value>
  </data>
  <data name="taskIdleWaitTimeoutLabel.Text" xml:space="preserve">
    <value>W y ait para ociosa para:</value>
  </data>
  <data name="taskLocalOnlyCheck.Text" xml:space="preserve">
    <value>No almacene y la contraseña. La tarea sólo tendrá acceso a los recursos del equipo local.</value>
  </data>
  <data name="taskLoggedOnRadio.Text" xml:space="preserve">
    <value>&amp;Ejecutar solo cuando el usuario haya iniciado sesión</value>
  </data>
  <data name="taskLoggedOptionalRadio.Text" xml:space="preserve">
    <value>Ejecutar y si usuario está logueado o no</value>
  </data>
  <data name="taskMaintenanceDeadlineLabel.Text" xml:space="preserve">
    <value>Si la tarea no termine, reiniciar después de:</value>
  </data>
  <data name="taskMaintenanceExclusiveCheck.Text" xml:space="preserve">
    <value>Iniciar la tarea en modo e &amp; xclusive</value>
  </data>
  <data name="taskMaintenancePeriodLabel.Text" xml:space="preserve">
    <value>Durante el mantenimiento, iniciar tarea cada:</value>
  </data>
  <data name="taskNameLabel.Text" xml:space="preserve">
    <value>Na &amp; me:</value>
  </data>
  <data name="taskNameText.Text" xml:space="preserve">
    <value>Nombre de la tarea</value>
  </data>
  <data name="taskRegDocLabel.Text" xml:space="preserve">
    <value>&amp;Documentación:</value>
  </data>
  <data name="taskRegSDDLBtn.Text" xml:space="preserve">
    <value>Editar seguridad...</value>
  </data>
  <data name="taskRegSDDLLabel.Text" xml:space="preserve">
    <value>Se &amp; curity:</value>
  </data>
  <data name="taskRegSourceLabel.Text" xml:space="preserve">
    <value>&amp;Origen:</value>
  </data>
  <data name="taskRegURILabel.Text" xml:space="preserve">
    <value>&amp;URI:</value>
  </data>
  <data name="taskRegVersionLabel.Text" xml:space="preserve">
    <value>&amp;Versión:</value>
  </data>
  <data name="taskRestartAttemptTimesLabel.Text" xml:space="preserve">
    <value>tiempos de</value>
  </data>
  <data name="taskRestartCountLabel.Text" xml:space="preserve">
    <value>Tentativa y reiniciar hasta:</value>
  </data>
  <data name="taskRestartIntervalCheck.Text" xml:space="preserve">
    <value>Si el y la tarea falla, reinicie cada:</value>
  </data>
  <data name="taskRestartOnIdleCheck.Text" xml:space="preserve">
    <value>Reiniciar si la res estado inactivo y umes</value>
  </data>
  <data name="taskRunLevelCheck.Text" xml:space="preserve">
    <value>Ejecutar ith de w &amp; privilegios más altos</value>
  </data>
  <data name="taskRunningRuleLabel.Text" xml:space="preserve">
    <value>Si la tarea ya es ru y rea, entonces se aplica la siguiente regla:</value>
  </data>
  <data name="taskSecurityGroupBox.Text" xml:space="preserve">
    <value>Opciones de seguridad</value>
  </data>
  <data name="taskStartIfConnectionCheck.Text" xml:space="preserve">
    <value>Iniciar onl y y si la conexión de red siguientes está disponible:</value>
  </data>
  <data name="taskStartWhenAvailableCheck.Text" xml:space="preserve">
    <value>Ejecutar la tarea tan pronto como sea posible tras un &amp; inicio programada se pierde</value>
  </data>
  <data name="taskStopIfGoingOnBatteriesCheck.Text" xml:space="preserve">
    <value>Parada si el equipo cambia a y la energía de la batería</value>
  </data>
  <data name="taskStopOnIdleEndCheck.Text" xml:space="preserve">
    <value>If pare el comput y er deja de ser ocioso</value>
  </data>
  <data name="taskTriggerIntroLabel.Text" xml:space="preserve">
    <value>Cuando creas una tarea, puede especificar las condiciones que se activarán la tarea.</value>
  </data>
  <data name="taskUserAcctLabel.Text" xml:space="preserve">
    <value>Cuando se ejecuta la tarea, utilice la siguiente cuenta:</value>
  </data>
  <data name="taskUseUnifiedSchedulingEngineCheck.Text" xml:space="preserve">
    <value>&amp;Uso unificado motor de programación</value>
  </data>
  <data name="taskVersionLabel.Text" xml:space="preserve">
    <value>&amp;Configurar para:</value>
  </data>
  <data name="taskVolatileCheck.Text" xml:space="preserve">
    <value>&amp;Desactivar automáticamente la tarea cada vez que inicia Windows</value>
  </data>
  <data name="taskWakeToRunCheck.Text" xml:space="preserve">
    <value>Y despertar el equipo para ejecutar esta tarea</value>
  </data>
  <data name="triggersTab.HelpKeyword" xml:space="preserve">
    <value>/HTML/04ea6e78-1d5c-464d-8ba2-b6a441adbdd7.htm</value>
  </data>
  <data name="triggersTab.Text" xml:space="preserve">
    <value>Factores desencadenantes</value>
  </data>
</root>