<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActionTypeComHandler" xml:space="preserve">
    <value>调用COM对象</value>
  </data>
  <data name="ActionTypeExecute" xml:space="preserve">
    <value>启动程序</value>
  </data>
  <data name="ActionTypeSendEmail" xml:space="preserve">
    <value>发送电子邮件</value>
  </data>
  <data name="ActionTypeShowMessage" xml:space="preserve">
    <value>显示一条消息</value>
  </data>
  <data name="ComHandlerAction" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="DOWAllDays" xml:space="preserve">
    <value>每天</value>
  </data>
  <data name="DOWFriday" xml:space="preserve">
    <value>星期五</value>
  </data>
  <data name="DOWMonday" xml:space="preserve">
    <value>星期一</value>
  </data>
  <data name="DOWSaturday" xml:space="preserve">
    <value>星期六</value>
  </data>
  <data name="DOWSunday" xml:space="preserve">
    <value>星期日</value>
  </data>
  <data name="DOWThursday" xml:space="preserve">
    <value>星期四</value>
  </data>
  <data name="DOWTuesday" xml:space="preserve">
    <value>星期二</value>
  </data>
  <data name="DOWWednesday" xml:space="preserve">
    <value>星期三</value>
  </data>
  <data name="EmailAction" xml:space="preserve">
    <value>{1} {0}</value>
  </data>
  <data name="EndSentence" xml:space="preserve">
    <value>.</value>
  </data>
  <data name="ExecAction" xml:space="preserve">
    <value>{0} {1}</value>
  </data>
  <data name="ListSeparator" xml:space="preserve">
    <value>, </value>
  </data>
  <data name="MOYAllMonths" xml:space="preserve">
    <value>每月</value>
  </data>
  <data name="MOYApril" xml:space="preserve">
    <value>四月</value>
  </data>
  <data name="MOYAugust" xml:space="preserve">
    <value>八月</value>
  </data>
  <data name="MOYDecember" xml:space="preserve">
    <value>十二月</value>
  </data>
  <data name="MOYFebruary" xml:space="preserve">
    <value>二月</value>
  </data>
  <data name="MOYJanuary" xml:space="preserve">
    <value>一月</value>
  </data>
  <data name="MOYJuly" xml:space="preserve">
    <value>七月</value>
  </data>
  <data name="MOYJune" xml:space="preserve">
    <value>六月</value>
  </data>
  <data name="MOYMarch" xml:space="preserve">
    <value>三月</value>
  </data>
  <data name="MOYMay" xml:space="preserve">
    <value>月</value>
  </data>
  <data name="MOYNovember" xml:space="preserve">
    <value>十一月</value>
  </data>
  <data name="MOYOctober" xml:space="preserve">
    <value>十月</value>
  </data>
  <data name="MOYSeptember" xml:space="preserve">
    <value>九月</value>
  </data>
  <data name="MultipleActions" xml:space="preserve">
    <value>Multiple actions defined</value>
  </data>
  <data name="MultipleTriggers" xml:space="preserve">
    <value>Multiple triggers defined</value>
  </data>
  <data name="ShowMessageAction" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="TaskDefaultPrincipal" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="TaskStateDisabled" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="TaskStateQueued" xml:space="preserve">
    <value>Queued</value>
  </data>
  <data name="TaskStateReady" xml:space="preserve">
    <value>Ready</value>
  </data>
  <data name="TaskStateRunning" xml:space="preserve">
    <value>Running</value>
  </data>
  <data name="TaskStateUnknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="TriggerAnyUser" xml:space="preserve">
    <value>any user</value>
  </data>
  <data name="TriggerBase1" xml:space="preserve">
    <value>After triggered, repeat every</value>
  </data>
  <data name="TriggerBase2" xml:space="preserve">
    <value>indefinitely</value>
  </data>
  <data name="TriggerBase3" xml:space="preserve">
    <value>for a duration of</value>
  </data>
  <data name="TriggerBase4" xml:space="preserve">
    <value>Trigger expires at</value>
  </data>
  <data name="TriggerBoot1" xml:space="preserve">
    <value>At system startup</value>
  </data>
  <data name="TriggerDaily1" xml:space="preserve">
    <value>At {0:t} every day</value>
  </data>
  <data name="TriggerDaily2" xml:space="preserve">
    <value>At {0:t} every {1} days</value>
  </data>
  <data name="TriggerEvent1" xml:space="preserve">
    <value>Custom event filter</value>
  </data>
  <data name="TriggerEventBasic1" xml:space="preserve">
    <value>On event - Log: {0}</value>
  </data>
  <data name="TriggerEventBasic2" xml:space="preserve">
    <value>, Source: {0}</value>
  </data>
  <data name="TriggerEventBasic3" xml:space="preserve">
    <value>, EventID: {0}</value>
  </data>
  <data name="TriggerIdle1" xml:space="preserve">
    <value>When computer is idle</value>
  </data>
  <data name="TriggerLogon1" xml:space="preserve">
    <value>At log on of {0}</value>
  </data>
  <data name="TriggerMonthly1" xml:space="preserve">
    <value>At {0:t} on day {1} of {2}, starting {0:d}</value>
  </data>
  <data name="TriggerMonthlyDOW1" xml:space="preserve">
    <value>At {0:t} on the {1} {2:f} each {3}, starting {0:d}</value>
  </data>
  <data name="TriggerRegistration1" xml:space="preserve">
    <value>When the task is created or modified</value>
  </data>
  <data name="TriggerSessionConsoleConnect" xml:space="preserve">
    <value>On local connection to {0}.</value>
  </data>
  <data name="TriggerSessionConsoleDisconnect" xml:space="preserve">
    <value>On local disconnect from {0}.</value>
  </data>
  <data name="TriggerSessionRemoteConnect" xml:space="preserve">
    <value>On remote connection to {0}.</value>
  </data>
  <data name="TriggerSessionRemoteDisconnect" xml:space="preserve">
    <value>On remote disconnect from {0}.</value>
  </data>
  <data name="TriggerSessionSessionLock" xml:space="preserve">
    <value>On workstation lock of {0}.</value>
  </data>
  <data name="TriggerSessionSessionUnlock" xml:space="preserve">
    <value>On workstation unlock of {0}.</value>
  </data>
  <data name="TriggerSessionUserSession" xml:space="preserve">
    <value>user session of {0}</value>
  </data>
  <data name="TriggerTime1" xml:space="preserve">
    <value>At {0:t} on {0:d}</value>
  </data>
  <data name="TriggerTypeBoot" xml:space="preserve">
    <value>当开机</value>
  </data>
  <data name="TriggerTypeDaily" xml:space="preserve">
    <value>日報</value>
  </data>
  <data name="TriggerTypeEvent" xml:space="preserve">
    <value>当事件</value>
  </data>
  <data name="TriggerTypeIdle" xml:space="preserve">
    <value>当空闲</value>
  </data>
  <data name="TriggerTypeLogon" xml:space="preserve">
    <value>当登录</value>
  </data>
  <data name="TriggerTypeMonthly" xml:space="preserve">
    <value>每月</value>
  </data>
  <data name="TriggerTypeMonthlyDOW" xml:space="preserve">
    <value>每月</value>
  </data>
  <data name="TriggerTypeRegistration" xml:space="preserve">
    <value>在創建或修改一個任務</value>
  </data>
  <data name="TriggerTypeSessionStateChange" xml:space="preserve">
    <value>狀態改變</value>
  </data>
  <data name="TriggerTypeTime" xml:space="preserve">
    <value>一時間</value>
  </data>
  <data name="TriggerTypeWeekly" xml:space="preserve">
    <value>每週</value>
  </data>
  <data name="TriggerWeekly1Week" xml:space="preserve">
    <value>At {0:t} every {1} of every week, starting {0:d}</value>
  </data>
  <data name="TriggerWeeklyMultWeeks" xml:space="preserve">
    <value>At {0:t} every {1} of every {2} weeks, starting {0:d}</value>
  </data>
  <data name="WWAllWeeks" xml:space="preserve">
    <value>每</value>
  </data>
  <data name="WWFifthWeek" xml:space="preserve">
    <value>第五次</value>
  </data>
  <data name="WWFirstWeek" xml:space="preserve">
    <value>第一</value>
  </data>
  <data name="WWFourthWeek" xml:space="preserve">
    <value>第四</value>
  </data>
  <data name="WWLastWeek" xml:space="preserve">
    <value>去年</value>
  </data>
  <data name="WWSecondWeek" xml:space="preserve">
    <value>第二</value>
  </data>
  <data name="WWThirdWeek" xml:space="preserve">
    <value>第三</value>
  </data>
</root>